version: 2.1

executors:
  default:
    docker:
      - image: circleci/golang:1.12.2
        environment:
          GO111MODULE: 'on'
          DATABASE_HOST: 127.0.0.1
          DATABASE_PORT: 3306
          DATABASE_USERNAME: root
          DATABASE_PASSWORD: ''
      - image: circleci/mysql:5.7.24
        environment:
          MYSQL_ALLOW_EMPTY_PASSWORD: yes
          MYSQL_ROOT_PASSWORD: ''
          MYSQL_DATABASE: examin_test
    working_directory: /go/src/github.com/16francs/examin_go

commands:
  restore_modules:
    steps:
      # Check go modules cache
      - restore_cache:
          name: Restore go modules cache
          keys:
            - v1-mod-{{ .Branch }}-{{ checksum "go.mod" }}

jobs:
  setup:
    executor:
      name: default
    steps:
      - checkout

      # Database setup
      - run:
          name: Wait for DB
          command: dockerize -wait tcp://127.0.0.1:3306 -timeout 120s

      - restore_modules

      # Install modules
      - run:
          name: Install modules
          command: go mod download

      # # Install golint
      # - run:
      #     name: Install golint
      #     command: go get -u golang.org/x/lint/golint
    
      # # Install goveralls
      # - run:
      #     name: Install goveralls
      #     command: go get -u github.com/mattn/goveralls

      # Save cache
      - save_cache:
          name: Save go modules cache
          key: v1-mod-{{ .Branch }}-{{ checksum "go.mod" }}
          paths:
            - /go/pkg/mod/cache
  
  test:
    executor:
      name: default
    steps:
      - checkout
      - restore_modules

      # Run lint
      - run:
          name: Run lint
          command: golint ./...

      # Run Test
      - run:
          name: Run test
          command: go test -v -cover ./... -coverprofile=./coverage.out

      # Create Test Result HTML
      - run:
          name: Create test result
          command: go tool cover -html=./coverage.out -o ./coverage.html

      # Sore coverage
      - store_artifacts:
          path: ./coverage.html
    
      # Post coverage
      - run:
          name: Post coverage
          command: goveralls -coverprofile=./coverage.out -service=circle-ci -repotoken=$COVERALLS_TOKEN

workflows:
  setup_and_test:
    jobs:
      - setup
      - test:
          requires:
            - setup
      